create database mar9nth
use mar9nth

drop database mar9nth

select * from product
select * from fact
select * from location

-- ans 1 display no. of states present in locationtable
select COUNT(distinct state) as no_of_states from Location

-- ans 2 how many product are of regular type
select count (distinct product) as number from product where type = 'regular'

--ans 3 how much spending has been done on marketing of product id 1
select sum (total_expenses) as spending from fact where productid = 1

-- ans 4 What is the minimum sales of a product?
select min(Sales) as min_sales from fact 
select ProductId,min(Sales) as min_sales from fact
group by ProductId 
order by ProductId 

--ans 5 Display the max Cost of Good Sold (COGS)
select max(COGS) as max_cogs from fact

-- ans 6 Display the details where product type is coffee
select * from Product where product_type='Coffee'

-- ans 7 Display the details where total expenses are greater than 40.
select * from fact
where total_expenses > 40

-- ans 8 what is  the avg sales in area code 719
select avg(sales) as avgsales from fact where area_code = 719

--ans 9 find out total profit generated by colorado state
select sum(profit) as total_profit from fact inner join location
on fact.area_code = location.area_code
where state = 'colorado'

-- ans 10 display the avg inventory for each product id
select productid, avg(inventory) as avginv from fact 
group by productid
order by productid

-- ans 11 Display state in sequential order in location table
SELECT distinct state FROM location
ORDER BY state

-- ans 12 Display the avg budget of product where avg budget margin should be greater than 100
select productid, avg(budget_margin) as avg_bm from fact
group by productid
having avg(budget_margin)>100

--ans 13 What is the total sales done on date 2010-01-01
select sum (sales) as total_sales from fact where date = '2010-01-01'

-- ans 14 dispaly the avg total expense of each product id on an individual date
select productid,date, avg(total_expenses) as avg_te from fact
group by productid, date
order by productid, date

-- ans 15 display the table with the following attributes such as date, productID, product_type, product, sales, profit, state, area_code
select date,Product.ProductId,Product_Type,Product,Sales,Profit,State,Location.Area_Code from fact 
join Product 
on fact.ProductId=Product.ProductId 
join Location 
on fact.Area_Code=Location.Area_Code

--ans 16 Display the rank without any gap to show the sales wise rank.
select sales ,
dense_rank() over(order by sales desc) as sales_rank
from fact

-- ans 17 find state wise profit and sales
select state, profit, sales from fact join location
on fact.area_code = location.area_code
group by state, profit, sales
order by state, profit, sales

--correct version of 17
select state, sum (profit) as total_Profit, sum( sales) as total_sales from fact join location
on fact.area_code = location.area_code
group by state

--ans 18 Find the state wise profit and sales along with productname
select state,product, sum(profit) as total_profit, sum (sales) as total_sales from fact 
join Product 
on fact.ProductId=Product.ProductId 
join Location 
on fact.Area_Code=Location.Area_Code
group by state, product
order by state

-- ans 19 if there is an increase in sales of 5%, calculate the increasedsales
select sales, sales * 1.05 as increasedsales from fact --sales + sales*0.05 , sales (1+0.05), sales*1.05

--ans 20 find maximum profit along with product id and product type
SELECT 
 product.productid, 
 product.product_type, 
 MAX(fact.profit) AS max_profit
FROM 
 fact
JOIN product ON fact.productid = product.productid
GROUP BY product.productid, product.product_type

-- 21 Create a stored procedure to fetch the result according to the product type from Product Table
CREATE PROCEDURE result (@ProductType nvarchar(50))
as
begin
select Product_Type
from Product
where Product_Type = @ProductType
End;

Exec result @ProductType = 'Tea';

drop procedure result

--22 Write a query by creating a condition in which if the total expenses is less than 60 then it is a profit or else loss.
select ProductId, Date, Sales, Profit, Total_Expenses,
case
when Total_Expenses < 60 then 'Profit' else 'Loss'
End as Porfit_Loss
from fact 


--23. Give the total weekly sales value with the date and product ID details. Use roll-up to pull the data 
select DATEPART(week, Date) as Week_Number, ProductID, sum(Sales) as Total_Weekly_Sales from fact
group by
Rollup(DATEPART(week, Date), ProductId)
Order By Datepart(week, Date), ProductId;

--24 Apply union and intersection operator on the tables which consist of attribute area code.
select area_code from fact
union 
select area_code from location

select Area_Code from fact
intersect
select Area_Code from Location

--25 Create a user-defined function for the product table to fetch a particular product type based upon the user’s preference.
CREATE FUNCTION dbo.GetProductsByType
(@ProductType NVARCHAR(50))
RETURNS TABLE
AS
RETURN
(
SELECT ProductID, Product_Type, Product, Type
FROM Product
WHERE Product_Type = @ProductType
);

select * from dbo.GetProductsByType('coffee')

---26. Change the product type from coffee to tea where product ID is 1 and undo it.
select * from product
update product
set product_type = 'tea'
where productid = 1

--27 Display the date, product ID and sales where total expenses are between 100 to 200.
select date, productid, sales,total_expenses from fact
where total_expenses between 100 and 200

--28 Delete the records in the Product Table for regular type
begin transaction
select * from product
delete from product where type = 'regular'
rollback transaction;

--29 Display the ASCII value of the fifth character from the column Product drop table Product
select Product,
ASCII(substring(Product, 5, 1)) as FifthCharacterASCII
from Product